name: check web site

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  lighthouse:
    name: Lighthouse
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/workflows/modules/setup-node

      - name: Build Application
        run: npm run build

      - name: push comment
        id: loading_comment_to_pr
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          header: lighthouse
          message: |
            Analyzing in lighthouse...

      - name: run lighthouse ci
        id: lighthouse_audit
        uses: treosh/lighthouse-ci-action@v3
        with:
          configPath: ./.lighthouserc.json
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}

      - name: format lighthouse score
        id: format_lighthouse_score
        uses: actions/github-script@v3
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const result = ${{ steps.lighthouse_audit.outputs.manifest }}[0].summary
            # const links = ${{ steps.lighthouse_audit.outputs.links }}
            # const formatResult = (res) => Math.round((res * 100))
            # Object.keys(result).forEach(key => result[key] = formatResult(result[key]))
            # const score = res => res >= 90 ? '🟢' : res >= 50 ? '🟠' : '🔴'
            # const comment = [
            #     `[Lighthouse分析結果](${Object.values(links)[0]}):`,
            #     '| 項目 | スコア |',
            #     '| --- | --- |',
            #     `| ${score(result.performance)} パフォーマンス | ${result.performance} |`,
            #     `| ${score(result.accessibility)} アクセシビリティ | ${result.accessibility} |`,
            #     `| ${score(result['best-practices'])} ベストプラクティス | ${result['best-practices']} |`,
            #     `| ${score(result.seo)} SEO | ${result.seo} |`,
            #     `| ${score(result.pwa)} PWA | ${result.pwa} |`,
            #     ' ',
            #     `*Lighthouse Result URL: [${Object.keys(links)[0]}](${Object.keys(links)[0]})*`
            # ].join('\n')

            core.setOutput("comment", "test");

      - name: comment lighthouse result
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          header: lighthouse
          message: |
            ${{ steps.format_lighthouse_score.outputs.comment }}
