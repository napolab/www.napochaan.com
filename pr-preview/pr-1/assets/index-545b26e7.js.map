{"version":3,"file":"index-545b26e7.js","sources":["../../src/hooks/heading-level/index.tsx"],"sourcesContent":["import { createContext, useContext } from \"react\";\n\nimport type { PropsWithChildren, FC } from \"react\";\n\ntype HeadingLevel = 1 | 2 | 3 | 4 | 5 | 6;\nconst LevelContext = createContext<HeadingLevel | null>(null);\n\ntype HeadingLevelProviderProps = {\n  level?: HeadingLevel;\n};\nexport const HeadingLevelProvider: FC<PropsWithChildren<HeadingLevelProviderProps>> = ({ children, level = null }) => {\n  return <LevelContext.Provider value={level}>{children}</LevelContext.Provider>;\n};\n\nexport const useHeadingLevel = () => {\n  return useContext(LevelContext);\n};\n\nexport const isHeadingLevel = (value: unknown): value is HeadingLevel => {\n  return typeof value === \"number\" && [1, 2, 3, 4, 5, 6].includes(value);\n};\n"],"names":["LevelContext","createContext","HeadingLevelProvider","__name","children","level","jsx","useHeadingLevel","useContext","isHeadingLevel","value"],"mappings":"qKAKA,MAAAA,EAAAC,EAAAA,cAAA,IAAA,EAKOC,EAAAC,EAAA,CAAA,CAAA,SAAAC,EAAA,MAAAC,EAAA,IAAA,IACLC,EAAAN,EAAA,SAAA,CAAA,MAAAK,EAAA,SAAAD,CAAA,CAAA,EADK,wBAIAG,EAAAJ,EAAA,IACLK,EAAAA,WAAAR,CAAA,EADK,mBAIAS,EAAAN,EAAAO,GACL,OAAAA,GAAA,UAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,CAAA,EAAA,SAAAA,CAAA,EADK"}