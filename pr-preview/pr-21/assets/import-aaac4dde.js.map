{"version":3,"file":"import-aaac4dde.js","sources":["../../node_modules/@react-aria/ssr/dist/import.mjs"],"sourcesContent":["import $89yE2$react, {useContext as $89yE2$useContext, useMemo as $89yE2$useMemo, useRef as $89yE2$useRef, useState as $89yE2$useState, useLayoutEffect as $89yE2$useLayoutEffect} from \"react\";\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ /*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ // We must avoid a circular dependency with @react-aria/utils, and this useLayoutEffect is\n// guarded by a check that it only runs on the client side.\n// eslint-disable-next-line rulesdir/useLayoutEffectRule\n\n// Default context value to use in case there is no SSRProvider. This is fine for\n// client-only apps. In order to support multiple copies of React Aria potentially\n// being on the page at once, the prefix is set to a random number. SSRProvider\n// will reset this to zero for consistency between server and client, so in the\n// SSR case multiple copies of React Aria is not supported.\nconst $704cf1d3b684cc5c$var$defaultContext = {\n    prefix: String(Math.round(Math.random() * 10000000000)),\n    current: 0\n};\nconst $704cf1d3b684cc5c$var$SSRContext = /*#__PURE__*/ (0, $89yE2$react).createContext($704cf1d3b684cc5c$var$defaultContext);\nfunction $704cf1d3b684cc5c$export$9f8ac96af4b1b2ae(props) {\n    let cur = (0, $89yE2$useContext)($704cf1d3b684cc5c$var$SSRContext);\n    let counter = $704cf1d3b684cc5c$var$useCounter(cur === $704cf1d3b684cc5c$var$defaultContext);\n    let value = (0, $89yE2$useMemo)(()=>({\n            // If this is the first SSRProvider, start with an empty string prefix, otherwise\n            // append and increment the counter.\n            prefix: cur === $704cf1d3b684cc5c$var$defaultContext ? \"\" : `${cur.prefix}-${counter}`,\n            current: 0\n        }), [\n        cur,\n        counter\n    ]);\n    return /*#__PURE__*/ (0, $89yE2$react).createElement($704cf1d3b684cc5c$var$SSRContext.Provider, {\n        value: value\n    }, props.children);\n}\nlet $704cf1d3b684cc5c$var$canUseDOM = Boolean(typeof window !== \"undefined\" && window.document && window.document.createElement);\nlet $704cf1d3b684cc5c$var$componentIds = new WeakMap();\nfunction $704cf1d3b684cc5c$var$useCounter(isDisabled = false) {\n    let ctx = (0, $89yE2$useContext)($704cf1d3b684cc5c$var$SSRContext);\n    let ref = (0, $89yE2$useRef)(null);\n    if (ref.current === null && !isDisabled) {\n        var _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED_ReactCurrentOwner;\n        // In strict mode, React renders components twice, and the ref will be reset to null on the second render.\n        // This means our id counter will be incremented twice instead of once. This is a problem because on the\n        // server, components are only rendered once and so ids generated on the server won't match the client.\n        // In React 18, useId was introduced to solve this, but it is not available in older versions. So to solve this\n        // we need to use some React internals to access the underlying Fiber instance, which is stable between renders.\n        // This is exposed as ReactCurrentOwner in development, which is all we need since StrictMode only runs in development.\n        // To ensure that we only increment the global counter once, we store the starting id for this component in\n        // a weak map associated with the Fiber. On the second render, we reset the global counter to this value.\n        // Since React runs the second render immediately after the first, this is safe.\n        // @ts-ignore\n        let currentOwner = (_React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = (0, $89yE2$react).__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED) === null || _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED === void 0 ? void 0 : (_React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED_ReactCurrentOwner = _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner) === null || _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED_ReactCurrentOwner === void 0 ? void 0 : _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED_ReactCurrentOwner.current;\n        if (currentOwner) {\n            let prevComponentValue = $704cf1d3b684cc5c$var$componentIds.get(currentOwner);\n            if (prevComponentValue == null) // On the first render, and first call to useId, store the id and state in our weak map.\n            $704cf1d3b684cc5c$var$componentIds.set(currentOwner, {\n                id: ctx.current,\n                state: currentOwner.memoizedState\n            });\n            else if (currentOwner.memoizedState !== prevComponentValue.state) {\n                // On the second render, the memoizedState gets reset by React.\n                // Reset the counter, and remove from the weak map so we don't\n                // do this for subsequent useId calls.\n                ctx.current = prevComponentValue.id;\n                $704cf1d3b684cc5c$var$componentIds.delete(currentOwner);\n            }\n        }\n        ref.current = ++ctx.current;\n    }\n    return ref.current;\n}\nfunction $704cf1d3b684cc5c$export$619500959fc48b26(defaultId) {\n    let ctx = (0, $89yE2$useContext)($704cf1d3b684cc5c$var$SSRContext);\n    // If we are rendering in a non-DOM environment, and there's no SSRProvider,\n    // provide a warning to hint to the developer to add one.\n    if (ctx === $704cf1d3b684cc5c$var$defaultContext && !$704cf1d3b684cc5c$var$canUseDOM) console.warn(\"When server rendering, you must wrap your application in an <SSRProvider> to ensure consistent ids are generated between the client and server.\");\n    let counter = $704cf1d3b684cc5c$var$useCounter(!!defaultId);\n    return defaultId || `react-aria${ctx.prefix}-${counter}`;\n}\nfunction $704cf1d3b684cc5c$export$535bd6ca7f90a273() {\n    let cur = (0, $89yE2$useContext)($704cf1d3b684cc5c$var$SSRContext);\n    let isInSSRContext = cur !== $704cf1d3b684cc5c$var$defaultContext;\n    let [isSSR, setIsSSR] = (0, $89yE2$useState)(isInSSRContext);\n    // If on the client, and the component was initially server rendered,\n    // then schedule a layout effect to update the component after hydration.\n    if (typeof window !== \"undefined\" && isInSSRContext) // This if statement technically breaks the rules of hooks, but is safe\n    // because the condition never changes after mounting.\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    (0, $89yE2$useLayoutEffect)(()=>{\n        setIsSSR(false);\n    }, []);\n    return isSSR;\n}\n\n\n\n\nexport {$704cf1d3b684cc5c$export$9f8ac96af4b1b2ae as SSRProvider, $704cf1d3b684cc5c$export$619500959fc48b26 as useSSRSafeId, $704cf1d3b684cc5c$export$535bd6ca7f90a273 as useIsSSR};\n//# sourceMappingURL=module.js.map\n"],"names":["$704cf1d3b684cc5c$var$defaultContext","$704cf1d3b684cc5c$var$SSRContext","$89yE2$react","$704cf1d3b684cc5c$export$9f8ac96af4b1b2ae","props","cur","$89yE2$useContext","counter","$704cf1d3b684cc5c$var$useCounter","value","$89yE2$useMemo","__name","$704cf1d3b684cc5c$var$canUseDOM","$704cf1d3b684cc5c$var$componentIds","isDisabled","ctx","ref","$89yE2$useRef","_React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","_React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED_ReactCurrentOwner","currentOwner","prevComponentValue","$704cf1d3b684cc5c$export$619500959fc48b26","defaultId"],"mappings":"8HA+BA,MAAMA,EAAuC,CACzC,OAAQ,OAAO,KAAK,MAAM,KAAK,OAAM,EAAK,IAAW,CAAC,EACtD,QAAS,CACb,EACMC,EAAqDC,EAAc,cAAcF,CAAoC,EAC3H,SAASG,EAA0CC,EAAO,CACtD,IAAIC,EAAUC,aAAmBL,CAAgC,EAC7DM,EAAUC,EAAiCH,IAAQL,CAAoC,EACvFS,EAAYC,EAAAA,QAAgB,KAAK,CAG7B,OAAQL,IAAQL,EAAuC,GAAK,GAAGK,EAAI,UAAUE,IAC7E,QAAS,CACrB,GAAY,CACJF,EACAE,CACR,CAAK,EACD,OAAyBL,EAAc,cAAcD,EAAiC,SAAU,CAC5F,MAAOQ,CACf,EAAOL,EAAM,QAAQ,CACrB,CAfSO,EAAAR,EAAA,6CAgBT,IAAIS,EAAkC,QAAQ,OAAO,OAAW,KAAe,OAAO,UAAY,OAAO,SAAS,aAAa,EAC3HC,EAAqC,IAAI,QAC7C,SAASL,EAAiCM,EAAa,GAAO,CAC1D,IAAIC,EAAUT,aAAmBL,CAAgC,EAC7De,EAAUC,SAAe,IAAI,EACjC,GAAID,EAAI,UAAY,MAAQ,CAACF,EAAY,CACrC,IAAII,EAA2DC,EAW/D,IAAIC,GAAgBF,EAAgEhB,EAAc,sDAAwD,MAAQgB,IAA8D,SAAmBC,EAA8ED,EAA0D,qBAAuB,MAAQC,IAAgF,OAAjQ,OAAmRA,EAA4E,QACxkB,GAAIC,EAAc,CACd,IAAIC,EAAqBR,EAAmC,IAAIO,CAAY,EACxEC,GAAsB,KAC1BR,EAAmC,IAAIO,EAAc,CACjD,GAAIL,EAAI,QACR,MAAOK,EAAa,aACpC,CAAa,EACQA,EAAa,gBAAkBC,EAAmB,QAIvDN,EAAI,QAAUM,EAAmB,GACjCR,EAAmC,OAAOO,CAAY,EAE7D,CACDJ,EAAI,QAAU,EAAED,EAAI,OACvB,CACD,OAAOC,EAAI,OACf,CAlCSL,EAAAH,EAAA,oCAmCT,SAASc,EAA0CC,EAAW,CAC1D,IAAIR,EAAUT,aAAmBL,CAAgC,EAG7Dc,IAAQf,GAAwC,CAACY,GAAiC,QAAQ,KAAK,iJAAiJ,EACpP,IAAIL,EAAUC,EAAiC,CAAC,CAACe,CAAS,EAC1D,OAAOA,GAAa,aAAaR,EAAI,UAAUR,GACnD,CAPSI,EAAAW,EAAA","x_google_ignoreList":[0]}